#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
const read_pkg_up_1 = require("read-pkg-up");
const lib_1 = require("./lib");
const pkg = read_pkg_up_1.sync();
const version = (pkg && pkg.packageJson.version) || 'unknown version';
commander_1.default
    .version(version)
    .option('-D, --directory <dir>', 'Download Directory')
    .option('-A --auto-number', 'Number the downloads sequentially')
    .parse(process.argv);
const main = async (prog) => {
    if (prog.args.length === 0)
        prog.help();
    try {
        const directory = prog.directory || '.';
        const args = prog.args;
        const keepFilenames = !prog.autoNumber;
        lib_1.downloadArray(args, directory, keepFilenames);
    }
    catch (err) {
        console.error(err);
    }
};
main(commander_1.default);
//# sourceMappingURL=index.js.map